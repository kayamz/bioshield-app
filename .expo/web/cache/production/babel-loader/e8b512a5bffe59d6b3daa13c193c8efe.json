{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';export default{get name(){return'ExpoSharing';},isAvailableAsync:function isAvailableAsync(){return function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof navigator==='undefined')){_context.next=2;break;}return _context.abrupt(\"return\",false);case 2:return _context.abrupt(\"return\",!!navigator.share);case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}();},shareAsync:function shareAsync(url){var _arguments=arguments;return function _callee2(){var options;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options=_arguments.length>1&&_arguments[1]!==undefined?_arguments[1]:{};if(!navigator.share){_context2.next=6;break;}_context2.next=4;return _regeneratorRuntime.awrap(navigator.share(_objectSpread(_objectSpread({},options),{},{url:url})));case 4:_context2.next=7;break;case 6:throw new UnavailabilityError('navigator','share');case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);}();}};","map":{"version":3,"sources":["../src/ExpoSharing.web.ts"],"names":[],"mappings":"65BAAA,OAAS,mBAAT,KAAoC,mBAApC,CAIA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,aAAP,CACD,CAHY,CAIP,gBAJO,4BAIS,iJAChB,MAAO,CAAA,SAAP,GAAqB,WADL,0DAEX,KAFW,yCAKb,CAAC,CAAC,SAAS,CAAC,KALC,0EAMrB,CAVY,CAWP,UAXO,qBAWI,GAXJ,CAW2C,sLAA1B,OAA0B,8DAAF,EAAE,KAElD,SAAS,CAAC,KAFwC,4EAG9C,SAAS,CAAC,KAAV,gCAAqB,OAArB,MAA8B,GAAG,CAAH,GAA9B,GAH8C,4CAK9C,IAAI,CAAA,mBAAJ,CAAwB,WAAxB,CAAqC,OAArC,CAL8C,0EAOvD,CAlBY,CAAf","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\ntype ShareOptions = { title?: string; text?: string; url?: string };\n\nexport default {\n  get name(): string {\n    return 'ExpoSharing';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n\n    return !!navigator.share;\n  },\n  async shareAsync(url: string, options: ShareOptions = {}): Promise<void> {\n    // NOTE: `navigator.share` is only available via HTTPS\n    if (navigator.share) {\n      await navigator.share({ ...options, url });\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}