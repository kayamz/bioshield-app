{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import PropTypes from'prop-types';var getAnimationValue=function getAnimationValue(delay,duration,callBack){var isMounted=true;var animationValue=useRef(new Animated.Value(0)).current;var fadeInOut=function fadeInOut(){Animated.sequence([Animated.timing(animationValue,{delay:200,duration:duration,toValue:0.5,useNativeDriver:true}),Animated.timing(animationValue,{delay:delay,duration:duration,toValue:1,useNativeDriver:true})]).start(function(){if(isMounted){animationValue.setValue(0);callBack();fadeInOut();}});};useEffect(function(){fadeInOut();return function(){animationValue.stopAnimation();isMounted=false;};},[]);return animationValue;};var LoopText=function LoopText(_ref){var textArray=_ref.textArray,style=_ref.style,delay=_ref.delay,duration=_ref.duration;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var animationValue=getAnimationValue(delay,duration,function(){setCount(function(prevCount){return prevCount+1<textArray.length?prevCount+1:0;});});return React.createElement(Animated.Text,{style:[style,{opacity:animationValue.interpolate({inputRange:[0,0.5,1],outputRange:[0,1,0]}),transform:[{translateY:animationValue.interpolate({inputRange:[0,0.5,1],outputRange:[-20,0,20]})}]}]},textArray[count]);};LoopText.defaultProps={delay:4000,duration:1000,style:{color:'black',fontSize:25,textAlign:'center',marginTop:20}};LoopText.propTypes={textArray:PropTypes.array.isRequired,style:PropTypes.any,delay:PropTypes.number,duration:PropTypes.number};export default LoopText;","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/node_modules/react-native-loop-text/index.js"],"names":["React","useRef","useEffect","useState","PropTypes","getAnimationValue","delay","duration","callBack","isMounted","animationValue","Animated","Value","current","fadeInOut","sequence","timing","toValue","useNativeDriver","start","setValue","stopAnimation","LoopText","textArray","style","count","setCount","prevCount","length","opacity","interpolate","inputRange","outputRange","transform","translateY","defaultProps","color","fontSize","textAlign","marginTop","propTypes","array","isRequired","any","number"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Animated } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst getAnimationValue = (delay, duration, callBack) => {\n  let isMounted = true\n  const animationValue = useRef(new Animated.Value(0)).current;\n  const fadeInOut = () => {\n    Animated.sequence([\n      Animated.timing(animationValue, {\n        delay: 200,\n        duration: duration,\n        toValue: 0.5,\n        useNativeDriver: true,\n      }),\n      Animated.timing(animationValue, {\n        delay: delay,\n        duration: duration,\n        toValue: 1,\n        useNativeDriver: true,\n      }),\n\n    ]).start(() => {\n      if (isMounted) {\n        animationValue.setValue(0);\n        callBack()\n        fadeInOut();\n      }\n    });\n  };\n  useEffect(() => {\n    fadeInOut();\n\n    return () => {\n      animationValue.stopAnimation()\n      isMounted = false\n    }\n  }, []);\n  return (animationValue);\n};\n\nconst LoopText = ({ textArray, style, delay, duration }) => {\n  const [count, setCount] = useState(0);\n  const animationValue = getAnimationValue(delay, duration, () => {\n    setCount((prevCount) =>\n      prevCount + 1 < textArray.length ?\n        prevCount + 1 : 0);\n  });\n  return (\n    <Animated.Text style={[\n      style,\n      {\n        opacity: animationValue.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 0],\n        }),\n        transform: [\n          {\n            translateY: animationValue.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [-20, 0, 20],\n            }),\n          },\n        ],\n      },\n    ]}\n    >\n      {textArray[count]}\n    </Animated.Text>\n  );\n};\n\nLoopText.defaultProps = {\n  delay: 4000,\n  duration: 1000,\n  style: {\n    color: 'black',\n    fontSize: 25,\n    textAlign: 'center',\n    marginTop: 20,\n  }\n};\n\nLoopText.propTypes = {\n  textArray: PropTypes.array.isRequired,\n  style: PropTypes.any,\n  delay: PropTypes.number,\n  duration: PropTypes.number,\n};\nexport default LoopText;\n"]},"metadata":{},"sourceType":"module"}