{"ast":null,"code":"'use strict';import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Platform from\"react-native-web/dist/exports/Platform\";import RNCCameraRoll from\"./nativeInterface\";var invariant=require('fbjs/lib/invariant');var GROUP_TYPES_OPTIONS={Album:'Album',All:'All',Event:'Event',Faces:'Faces',Library:'Library',PhotoStream:'PhotoStream',SavedPhotos:'SavedPhotos'};var ASSET_TYPE_OPTIONS={All:'All',Videos:'Videos',Photos:'Photos'};var CameraRoll=function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:\"saveImageWithTag\",value:function saveImageWithTag(tag){console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');return this.saveToCameraRoll(tag,'photo');}},{key:\"deletePhotos\",value:function deletePhotos(photoUris){return RNCCameraRoll.deletePhotos(photoUris);}},{key:\"save\",value:function save(tag){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$type=options.type,type=_options$type===void 0?'auto':_options$type,_options$album=options.album,album=_options$album===void 0?'':_options$album;invariant(typeof tag==='string','CameraRoll.saveToCameraRoll must be a valid string.');invariant(options.type==='photo'||options.type==='video'||options.type==='auto'||options.type===undefined,\"The second argument to saveToCameraRoll must be 'photo' or 'video' or 'auto'. You passed \"+(type||'unknown'));if(type==='auto'){if(['mov','mp4'].indexOf(tag.split('.').slice(-1)[0])>=0){type='video';}else{type='photo';}}return RNCCameraRoll.saveToCameraRoll(tag,{type:type,album:album});}},{key:\"saveToCameraRoll\",value:function saveToCameraRoll(tag,type){console.warn('CameraRoll.saveToCameraRoll(tag, type) is deprecated.  Use the save function instead');return CameraRoll.save(tag,{type:type});}},{key:\"getAlbums\",value:function getAlbums(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{assetType:ASSET_TYPE_OPTIONS.All};return RNCCameraRoll.getAlbums(params);}},{key:\"getParamsWithDefaults\",value:function getParamsWithDefaults(params){var newParams=_objectSpread({},params);if(!newParams.assetType){newParams.assetType=ASSET_TYPE_OPTIONS.All;}if(!newParams.groupTypes&&Platform.OS!=='android'){newParams.groupTypes=GROUP_TYPES_OPTIONS.All;}return newParams;}},{key:\"getPhotos\",value:function getPhotos(params){params=CameraRoll.getParamsWithDefaults(params);var promise=RNCCameraRoll.getPhotos(params);if(arguments.length>1){console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');var successCallback=arguments[1];var errorCallback=arguments[2]||function(){};promise.then(successCallback,errorCallback);}return promise;}}]);return CameraRoll;}();CameraRoll.GroupTypesOptions=GROUP_TYPES_OPTIONS;CameraRoll.AssetTypeOptions=ASSET_TYPE_OPTIONS;module.exports=CameraRoll;","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/node_modules/@react-native-community/cameraroll/js/CameraRoll.js"],"names":["RNCCameraRoll","invariant","require","GROUP_TYPES_OPTIONS","Album","All","Event","Faces","Library","PhotoStream","SavedPhotos","ASSET_TYPE_OPTIONS","Videos","Photos","CameraRoll","tag","console","warn","saveToCameraRoll","photoUris","deletePhotos","options","type","album","undefined","indexOf","split","slice","save","params","assetType","getAlbums","newParams","groupTypes","Platform","OS","getParamsWithDefaults","promise","getPhotos","arguments","length","successCallback","errorCallback","then","GroupTypesOptions","AssetTypeOptions","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\nimport {Platform} from 'react-native';\nimport RNCCameraRoll from './nativeInterface';\n\nconst invariant = require('fbjs/lib/invariant');\n\nconst GROUP_TYPES_OPTIONS = {\n  Album: 'Album',\n  All: 'All', // default\n  Event: 'Event',\n  Faces: 'Faces',\n  Library: 'Library',\n  PhotoStream: 'PhotoStream',\n  SavedPhotos: 'SavedPhotos',\n};\n\nconst ASSET_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Photos: 'Photos',\n};\n\nexport type GroupTypes = $Keys<typeof GROUP_TYPES_OPTIONS>;\n\nexport type Include =\n  | 'filename'\n  | 'fileSize'\n  | 'location'\n  | 'imageSize'\n  | 'playableDuration';\n\n/**\n * Shape of the param arg for the `getPhotos` function.\n */\nexport type GetPhotosParams = {\n  /**\n   * The number of photos wanted in reverse order of the photo application\n   * (i.e. most recent first).\n   */\n  first: number,\n\n  /**\n   * A cursor that matches `page_info { end_cursor }` returned from a previous\n   * call to `getPhotos`\n   */\n  after?: string,\n\n  /**\n   * Specifies which group types to filter the results to.\n   */\n  groupTypes?: GroupTypes,\n\n  /**\n   * Specifies filter on group names, like 'Recent Photos' or custom album\n   * titles.\n   */\n  groupName?: string,\n\n  /**\n   * Specifies filter on asset type\n   */\n  assetType?: $Keys<typeof ASSET_TYPE_OPTIONS>,\n\n  /**\n   * Earliest time to get photos from. A timestamp in milliseconds. Exclusive.\n   */\n  fromTime?: number,\n\n  /**\n   * Latest time to get photos from. A timestamp in milliseconds. Inclusive.\n   */\n  toTime?: Number,\n\n  /**\n   * Filter by mimetype (e.g. image/jpeg).\n   */\n  mimeTypes?: Array<string>,\n\n  /**\n   * Specific fields in the output that we want to include, even though they\n   * might have some performance impact.\n   */\n  include?: Include[],\n};\n\nexport type PhotoIdentifier = {\n  node: {\n    type: string,\n    group_name: string,\n    image: {\n      filename: string | null,\n      uri: string,\n      height: number,\n      width: number,\n      fileSize: number | null,\n      playableDuration: number,\n    },\n    timestamp: number,\n    location: {\n      latitude?: number,\n      longitude?: number,\n      altitude?: number,\n      heading?: number,\n      speed?: number,\n    } | null,\n  },\n};\n\nexport type PhotoIdentifiersPage = {\n  edges: Array<PhotoIdentifier>,\n  page_info: {\n    has_next_page: boolean,\n    start_cursor?: string,\n    end_cursor?: string,\n  },\n  limited?: boolean,\n};\n\nexport type SaveToCameraRollOptions = {\n  type?: 'photo' | 'video' | 'auto',\n  album?: string,\n};\n\nexport type GetAlbumsParams = {\n  assetType?: $Keys<typeof ASSET_TYPE_OPTIONS>,\n};\n\nexport type Album = {\n  title: string,\n  count: number,\n};\n\n/**\n * `CameraRoll` provides access to the local camera roll or photo library.\n *\n * See https://facebook.github.io/react-native/docs/cameraroll.html\n */\nclass CameraRoll {\n  static GroupTypesOptions = GROUP_TYPES_OPTIONS;\n  static AssetTypeOptions = ASSET_TYPE_OPTIONS;\n\n  /**\n   * `CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.\n   */\n  static saveImageWithTag(tag: string): Promise<string> {\n    console.warn(\n      '`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.',\n    );\n    return this.saveToCameraRoll(tag, 'photo');\n  }\n\n  /**\n   * On iOS: requests deletion of a set of photos from the camera roll.\n   * On Android: Deletes a set of photos from the camera roll.\n   *\n   */\n  static deletePhotos(photoUris: Array<string>) {\n    return RNCCameraRoll.deletePhotos(photoUris);\n  }\n\n  /**\n   * Saves the photo or video to the camera roll or photo library.\n   *\n   */\n  static save(\n    tag: string,\n    options: SaveToCameraRollOptions = {},\n  ): Promise<string> {\n    let {type = 'auto', album = ''} = options;\n    invariant(\n      typeof tag === 'string',\n      'CameraRoll.saveToCameraRoll must be a valid string.',\n    );\n    invariant(\n      options.type === 'photo' ||\n        options.type === 'video' ||\n        options.type === 'auto' ||\n        options.type === undefined,\n      `The second argument to saveToCameraRoll must be 'photo' or 'video' or 'auto'. You passed ${type ||\n        'unknown'}`,\n    );\n    if (type === 'auto') {\n      if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {\n        type = 'video';\n      } else {\n        type = 'photo';\n      }\n    }\n    return RNCCameraRoll.saveToCameraRoll(tag, {type, album});\n  }\n  static saveToCameraRoll(\n    tag: string,\n    type?: 'photo' | 'video' | 'auto',\n  ): Promise<string> {\n    console.warn(\n      'CameraRoll.saveToCameraRoll(tag, type) is deprecated.  Use the save function instead',\n    );\n    return CameraRoll.save(tag, {type});\n  }\n  static getAlbums(\n    params?: GetAlbumsParams = {assetType: ASSET_TYPE_OPTIONS.All},\n  ): Promise<Album[]> {\n    return RNCCameraRoll.getAlbums(params);\n  }\n\n  static getParamsWithDefaults(params: GetPhotosParams): GetPhotosParams {\n    const newParams = {...params};\n    if (!newParams.assetType) {\n      newParams.assetType = ASSET_TYPE_OPTIONS.All;\n    }\n    if (!newParams.groupTypes && Platform.OS !== 'android') {\n      newParams.groupTypes = GROUP_TYPES_OPTIONS.All;\n    }\n    return newParams;\n  }\n\n  /**\n   * Returns a Promise with photo identifier objects from the local camera\n   * roll of the device matching shape defined by `getPhotosReturnChecker`.\n   *\n   * See https://facebook.github.io/react-native/docs/cameraroll.html#getphotos\n   */\n  static getPhotos(params: GetPhotosParams): Promise<PhotoIdentifiersPage> {\n    params = CameraRoll.getParamsWithDefaults(params);\n    const promise = RNCCameraRoll.getPhotos(params);\n\n    if (arguments.length > 1) {\n      console.warn(\n        'CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead',\n      );\n      let successCallback = arguments[1];\n      const errorCallback = arguments[2] || (() => {});\n      promise.then(successCallback, errorCallback);\n    }\n\n    return promise;\n  }\n}\n\nmodule.exports = CameraRoll;\n"]},"metadata":{},"sourceType":"module"}