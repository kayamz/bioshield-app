{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useState}from\"react\";import AsyncStorage from\"@react-native-async-storage/async-storage\";export var useNoticeState=function useNoticeState(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isNotice=_useState2[0],setIsNotice=_useState2[1];return{isNotice:isNotice,setIsNotice:setIsNotice,clickCancelNotice:function clickCancelNotice(){return setIsNotice(false);},clickNeverNotice:function clickNeverNotice(){return _regeneratorRuntime.async(function clickNeverNotice$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"Notice\",JSON.stringify(false)));case 3:setIsNotice(false);_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(\"Storage Set Error: \"+_context.t0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,6]],Promise);}};};","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/Buttons/MainScreenBtns/NoticeBtns/NoticeContainer.js"],"names":["useState","AsyncStorage","useNoticeState","isNotice","setIsNotice","clickCancelNotice","clickNeverNotice","setItem","JSON","stringify","console","log"],"mappings":"6HAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2CAAzB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACnC,cAAgCF,QAAQ,CAAC,IAAD,CAAxC,wCAAOG,QAAP,eAAiBC,WAAjB,eAEA,MAAO,CACND,QAAQ,CAARA,QADM,CAENC,WAAW,CAAXA,WAFM,CAGNC,iBAAiB,CAAE,mCAAMD,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAHb,CAINE,gBAAgB,CAAE,uNAEVL,YAAY,CAACM,OAAb,CAAqB,QAArB,CAA+BC,IAAI,CAACC,SAAL,CAAe,KAAf,CAA/B,CAFU,SAGhBL,WAAW,CAAC,KAAD,CAAX,CAHgB,8EAKhBM,OAAO,CAACC,GAAR,oCALgB,wEAJZ,CAAP,CAaA,CAhBM","sourcesContent":["import { useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const useNoticeState = () => {\n\tconst [isNotice, setIsNotice] = useState(true);\n\n\treturn {\n\t\tisNotice,\n\t\tsetIsNotice,\n\t\tclickCancelNotice: () => setIsNotice(false),\n\t\tclickNeverNotice: async () => {\n\t\t\ttry {\n\t\t\t\tawait AsyncStorage.setItem(\"Notice\", JSON.stringify(false));\n\t\t\t\tsetIsNotice(false);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(`Storage Set Error: ${e}`);\n\t\t\t}\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}