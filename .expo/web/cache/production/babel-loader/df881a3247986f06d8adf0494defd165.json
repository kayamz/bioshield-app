{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import Image from\"react-native-web/dist/exports/Image\";import View from\"react-native-web/dist/exports/View\";export default function ProgressLoading(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isReady=_useState2[0],setIsReady=_useState2[1];useEffect(function(){setTimeout(function(){setIsReady(true);},3000);},[]);return isReady?React.createElement(View,{style:{flex:1,alignItems:'center',justifyContent:'center'}},React.createElement(Image,{source:require(\"../../assets/images/again.gif\"),onLoad:this._cacheResourcesAsync})):React.createElement(View,{style:{flex:1,alignItems:'center',justifyContent:'center'}},React.createElement(Image,{source:require(\"../../assets/images/3.png\")}));}","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/Screen/ProgressBar/progressLoading.js"],"names":["React","useState","useEffect","ProgressLoading","isReady","setIsReady","setTimeout","flex","alignItems","justifyContent","require","_cacheResourcesAsync"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,4GAGA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACxC,cAA8BF,QAAQ,CAAC,IAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eACAH,SAAS,CAAC,UAAM,CACdI,UAAU,CAAC,UAAM,CACfD,UAAU,CAAC,IAAD,CAAV,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAOD,CAAAA,OAAO,CACZ,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEG,IAAI,CAAE,CAAR,CAAWC,UAAU,CAAE,QAAvB,CAAiCC,cAAc,CAAE,QAAjD,CAAb,EACE,oBAAC,KAAD,EACE,MAAM,CAAEC,OAAO,iCADjB,CAEE,MAAM,CAAE,KAAKC,oBAFf,EADF,CADY,CAQZ,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEJ,IAAI,CAAE,CAAR,CAAWC,UAAU,CAAE,QAAvB,CAAiCC,cAAc,CAAE,QAAjD,CAAb,EACE,oBAAC,KAAD,EAAO,MAAM,CAAEC,OAAO,6BAAtB,EADF,CARF,CAYD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Image, View } from 'react-native';\n\nexport default function ProgressLoading() {\n  const [isReady, setIsReady] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsReady(true);\n    }, 3000);\n  }, []);\n\n  return isReady ? (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Image\n        source={require('../../assets/images/again.gif')}\n        onLoad={this._cacheResourcesAsync}\n      />\n    </View>\n  ) : (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Image source={require('../../assets/images/3.png')} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}