{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{StatusBar}from\"expo-status-bar\";import React,{useState,useRef,useEffect}from\"react\";import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ProgressLoading from\"./progressLoading\";import Texts from\"./Texts\";var Progress=function Progress(_ref){var step=_ref.step,steps=_ref.steps,height=_ref.height;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),width=_useState2[0],setWidth=_useState2[1];var animatedValue=useRef(new Animated.Value(-1000)).current;var reactive=useRef(new Animated.Value(-1000)).current;useEffect(function(){Animated.timing(animatedValue,{toValue:reactive,donation:300,useNativeDriver:true}).start();},[]);useEffect(function(){reactive.setValue(-width+width*step/steps);},[step,width]);return React.createElement(React.Fragment,null,React.createElement(Texts,null),React.createElement(View,{onLayout:function onLayout(e){var newWidth=e.nativeEvent.layout.width;setWidth(newWidth);},style:{height:height,backgroundColor:\"#ffffff\",borderRadius:height,overflow:\"hidden\",marginBottom:height/0.04}},React.createElement(Animated.View,{style:{height:height,width:\"100%\",borderRadius:height,backgroundColor:\"#032dff\",marginBottom:height/0.04,left:0,top:0,transform:[{translateX:animatedValue}]}})));};export default function App(){var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),index=_useState4[0],setIndex=_useState4[1];useEffect(function(){var interval=setInterval(function(){setIndex((index+2)%(100+2));},1000);return function(){clearInterval(interval);};},[index]);return React.createElement(View,{style:styles.container},React.createElement(ProgressLoading,null),React.createElement(StatusBar,{hidden:true}),React.createElement(Progress,{step:index,steps:100,height:3}));}var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#fff\",justifyContent:\"center\",padding:(0,20)}});","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/Screen/ProgressBar/progressBarMain.js"],"names":["StatusBar","React","useState","useRef","useEffect","ProgressLoading","Texts","Progress","step","steps","height","width","setWidth","animatedValue","Animated","Value","current","reactive","timing","toValue","donation","useNativeDriver","start","setValue","e","newWidth","nativeEvent","layout","backgroundColor","borderRadius","overflow","marginBottom","left","top","transform","translateX","App","index","setIndex","interval","setInterval","clearInterval","styles","container","StyleSheet","create","flex","justifyContent","padding"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Animated, StyleSheet, Text, View } from \"react-native\";\nimport ProgressLoading from \"./progressLoading\";\nimport Texts from \"./Texts\";\n\nconst Progress = ({ step, steps, height }) => {\n\tconst [width, setWidth] = useState(0);\n\tconst animatedValue = useRef(new Animated.Value(-1000)).current;\n\tconst reactive = useRef(new Animated.Value(-1000)).current;\n\n\tuseEffect(() => {\n\t\tAnimated.timing(animatedValue, {\n\t\t\ttoValue: reactive,\n\t\t\tdonation: 300,\n\t\t\tuseNativeDriver: true,\n\t\t}).start();\n\t}, []);\n\n\tuseEffect(() => {\n\t\treactive.setValue(-width + (width * step) / steps);\n\t}, [step, width]);\n\n\treturn (\n\t\t<>\n\t\t\t<Texts />\n\t\t\t<View\n\t\t\t\tonLayout={(e) => {\n\t\t\t\t\tconst newWidth = e.nativeEvent.layout.width;\n\n\t\t\t\t\tsetWidth(newWidth);\n\t\t\t\t}}\n\t\t\t\tstyle={{\n\t\t\t\t\theight,\n\t\t\t\t\tbackgroundColor: \"#ffffff\",\n\t\t\t\t\tborderRadius: height,\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tmarginBottom: height / 0.04,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Animated.View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight,\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tborderRadius: height,\n\t\t\t\t\t\tbackgroundColor: \"#032dff\",\n\t\t\t\t\t\tmarginBottom: height / 0.04,\n\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\ttransform: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttranslateX: animatedValue,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</>\n\t);\n};\n\nexport default function App() {\n\tconst [index, setIndex] = useState(0);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetIndex((index + 2) % (100 + 2));\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [index]);\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ProgressLoading />\n\t\t\t<StatusBar hidden />\n\t\t\t<Progress step={index} steps={100} height={3} />\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\tjustifyContent: \"center\",\n\t\tpadding: (0, 20),\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}