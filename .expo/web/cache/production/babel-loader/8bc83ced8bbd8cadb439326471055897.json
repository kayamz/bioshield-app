{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import axios from'axios';import Alert from\"react-native-web/dist/exports/Alert\";import{SERVER_IP,SERVER_PORT}from\"./apiAddress.js\";var URL=\"http://\"+SERVER_IP+\":\"+SERVER_PORT+\"/let_me_shine\";var tempResult=[];var getResults=function getResults(imgObj){console.log('[3] Image Transfer Start!');console.log('[3] Image Transfer Complete!');tempResult[0]=imgObj[\"after\"];tempResult[1]=imgObj[\"after64\"];};var getResultURL=function getResultURL(url){return _regeneratorRuntime.async(function getResultURL$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('[2] Get Start!');_context.next=4;return _regeneratorRuntime.awrap(axios.get(url).then(function(res){return getResults(res.data.results);}).catch(function(err){return console.log(\"Get axios error: \"+err);}));case 4:console.log('[2] Get End!');_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(\"getResultURL Error: \"+_context.t0);case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);};export var imageTransfer=function imageTransfer(firstPhoto){var config,result;return _regeneratorRuntime.async(function imageTransfer$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;console.log('[1] Post Start!');config={headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'}};_context2.next=5;return _regeneratorRuntime.awrap(axios.post(URL,{label:'Image',origin:firstPhoto},config).then(function(res){return getResultURL(res.data);}).catch(function(err){console.log(\"Post axios error: \"+err);error=false;Alert.alert('사람을 찍어주세요🤣','만약 사람이라면 눈을 조금만 더 크게 떠주세요😘');}));case 5:console.log('[1] Post End!');_context2.next=12;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(\"imageTransfer Error: \"+_context2.t0);Alert.alert('imageTransfer Error🤣');case 12:_context2.prev=12;result=tempResult;return _context2.finish(12);case 15:case\"end\":return _context2.stop();}}},null,null,[[0,8,12,15]],Promise);};","map":{"version":3,"sources":["/Users/kangminju/Downloads/Seme2021_2/GraduPJ/Code/gradu-project/API/api.js"],"names":["axios","SERVER_IP","SERVER_PORT","URL","tempResult","getResults","imgObj","console","log","getResultURL","url","get","then","res","data","results","catch","err","imageTransfer","firstPhoto","config","headers","post","label","origin","error","Alert","alert","result"],"mappings":"4DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,uDAEA,OAASC,SAAT,CAAoBC,WAApB,uBAEA,GAAMC,CAAAA,GAAG,WAAaF,SAAb,KAA0BC,WAA1B,gBAAT,CAEA,GAAIE,CAAAA,UAAU,CAAG,EAAjB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CAC9BC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAEAD,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACGJ,UAAU,CAAC,CAAD,CAAV,CAAgBE,MAAM,CAAC,OAAD,CAAtB,CACAF,UAAU,CAAC,CAAD,CAAV,CAAgBE,MAAM,CAAC,SAAD,CAAtB,CACH,CAND,CAQA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAOC,GAAP,wIAEnBH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAFmB,iDAIbR,KAAK,CACTW,GADI,CACAD,GADA,EAEJE,IAFI,CAEC,SAACC,GAAD,QAASR,CAAAA,UAAU,CAACQ,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAnB,EAFD,EAIJC,KAJI,CAIE,SAACC,GAAD,QAASV,CAAAA,OAAO,CAACC,GAAR,qBAAgCS,GAAhC,CAAT,EAJF,CAJa,SAUnBV,OAAO,CAACC,GAAR,CAAY,cAAZ,EAVmB,+EAYnBD,OAAO,CAACC,GAAR,qCAZmB,yEAArB,CAgBA,MAAO,IAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAOC,UAAP,+JAE3BZ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACMY,MAHqB,CAGZ,CAEdC,OAAO,CAAE,CACR,eAAgB,kBADR,CAER,8BAA+B,GAFvB,CAFK,CAHY,mDAUrBrB,KAAK,CACTsB,IADI,CAEJnB,GAFI,CAGJ,CACCoB,KAAK,CAAE,OADR,CAECC,MAAM,CAAEL,UAFT,CAHI,CAOJC,MAPI,EASJR,IATI,CASC,SAACC,GAAD,QAASJ,CAAAA,YAAY,CAACI,GAAG,CAACC,IAAL,CAArB,EATD,EAYJE,KAZI,CAYE,SAACC,GAAD,CAAS,CACfV,OAAO,CAACC,GAAR,sBAAiCS,GAAjC,EACAQ,KAAK,CAAG,KAAR,CACAC,KAAK,CAACC,KAAN,CACC,aADD,CAEC,6BAFD,EAIA,CAnBI,CAVqB,SA8B3BpB,OAAO,CAACC,GAAR,CAAY,eAAZ,EA9B2B,mFAgC3BD,OAAO,CAACC,GAAR,uCACMkB,KAAK,CAACC,KAAN,CACI,uBADJ,EAjCqB,0BAqCXC,MArCW,CAqCFxB,UArCE,6GAAtB","sourcesContent":["import axios from 'axios';\nimport { Alert } from 'react-native';\nimport { SERVER_IP, SERVER_PORT } from './apiAddress.js';\n\nconst URL = `http://${SERVER_IP}:${SERVER_PORT}/let_me_shine`;\n\nlet tempResult = [];\n// let result = [];\n\nconst getResults = (imgObj) => {\n\tconsole.log('[3] Image Transfer Start!');\n\n\tconsole.log('[3] Image Transfer Complete!');\n    tempResult[0] = imgObj[\"after\"];\n    tempResult[1] = imgObj[\"after64\"];\n};\n\nconst getResultURL = async (url) => {\n\ttry {\n\t\tconsole.log('[2] Get Start!');\n\n\t\tawait axios\n\t\t\t.get(url) // get으로 해당 url에 접근\n\t\t\t.then((res) => getResults(res.data.results))\n\t\t\t// getResults 함수로 보낸다.\n\t\t\t.catch((err) => console.log(`Get axios error: ${err}`));\n\n\t\tconsole.log('[2] Get End!');\n\t} catch (e) {\n\t\tconsole.log(`getResultURL Error: ${e}`);\n\t}\n};\n\nexport const imageTransfer = async (firstPhoto) => {\n\ttry {\n\t\tconsole.log('[1] Post Start!');\n\t\tconst config = {\n\t\t\t// 보내는 파일의 타입 설정\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t},\n\t\t};\n\t\tawait axios\n\t\t\t.post(\n\t\t\t\tURL,\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Image',\n\t\t\t\t\torigin: firstPhoto\n\t\t\t\t},\n\t\t\t\tconfig\n                ) // 해당 URL로 POST\n\t\t\t.then((res) => getResultURL(res.data))\n\t\t\t// POST의 결과(res)로부터 모델 결과 위치(res.data) 얻음\n\t\t\t// 이를 getResultURL 함수로 보낸다.\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(`Post axios error: ${err}`);\n\t\t\t\terror = false;\n\t\t\t\tAlert.alert(\n\t\t\t\t\t'사람을 찍어주세요🤣',\n\t\t\t\t\t'만약 사람이라면 눈을 조금만 더 크게 떠주세요😘'\n\t\t\t\t);\n\t\t\t});\n\t\tconsole.log('[1] Post End!');\n\t} catch (e) {\n\t\tconsole.log(`imageTransfer Error: ${e}`);\n        Alert.alert(\n            'imageTransfer Error🤣',\n        );\n        }finally {\n            const result = tempResult;\n        }\n};"]},"metadata":{},"sourceType":"module"}